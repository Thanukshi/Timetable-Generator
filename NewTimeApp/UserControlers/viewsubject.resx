<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnback.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABExJREFUaEPtmcFLFVEUxkUe0SJCQkJEpD/gPlEJEYmI/gBpLREuI6JVCxfRzkWL
        FhEtI6RFixbSQqJFC5GQEHERESIi4cJFi4gQCZH6feOZ53XezLyZ9+6rZ3jg45x5995zv3PumZk793Wd
        yv8io5XqOXDeLk+OjFSq3RB34I20/XwyxMiPgUXwBQxZ08kQZXyk4hbBPsEogGFr6mxR5gHkq5uQ/n0I
        t44etS6dK5CEvBtHLx2Rj3AyAoD8EERFfl/EWQU/gMvWrfME4rphh9FbRhi4mLywwfW4de8sEXkyPQHJ
        Dx7hBNw39CyYxNYq9aC7zcW/FYgMQ2gZJMumZhPkAfon2AF6IinYOXATXAJ/PxjL/CiTb4OYqEe+sW3X
        BO4+Yc8ArWQffm2WNomWn4mugI/AiMSkfIL5dmK1tEo76Hnab2EPgPasDBMo8yIflU2rSAQifGcOldkd
        ULFpWxecKvPHysZHkyXUyF4FU1z3Go3mBCeQdxll49s+wXw7fXya7ViR6ku0NobGqKQwkKeNqz1tQqJI
        IOCAVVDyboDiZYWT6CUF+a9aVn+Zk/Dbith5bdl2dRf9GFwwitlCJ5XNOA6WE9mInaXYPsF8O318Yxut
        J9ZTMGhU04UO2hIvgVrZ+A5DoRHhDHsPrZdhv9GtFxpfkC29aGxgJ5RQnf0OpD+haNC+5b2C8DMQIz1D
        RxM0stPHN2O7J+j6e4Ifo+0CSH10hkI2scK2HrP3SMwZo35caOyn4wpaN09tcBJyVgZpPlqAdryTRrle
        aNQHum7ozCBiUj7BfFuldHhfhbDxu4Lf9OMbGit0HAN6tatzEMQBBbKV3NtGOV0IQLtEBVG3EnJSBsnx
        IYDfz+j8Myg6xB/ux4KISfkE8+3i5VHUxvcu+j46e7uhRqAgWi6nOKCQNnhLQANGN1voOAjWQLQSclIG
        GtMm6PP1utHMFzpqJfTxwW7x0IFPMN8uVx5lbOaYMYr5QkfKKdrwaSU0MA18zLsH6CkwDe6Ch+A54E1f
        1XFMLQFCqzaYN4rFhIGDDFojkIiID9o20LkHWwTYS7+raN2AC/TX00Rv2Bqxktg018WFQVE5MfmxcoLU
        Bnbhkzn6ngX6+ppm/Cs0n7BKTJkScjvmrrgwUfx0SpYTK+BKHy0yTu8drcwEgWjD9itOjNDALh9ALAym
        nNwqiFeiYQkVEfwM4+c1+geoEc7Atg1rTnCgbcciE2rp11nSIIe7+LmIb+4Tx6Myu4TQizakOWESlZM2
        gHrZBT2dxhf3iJshOfo+jjJuK12zwax1b01wyFbczeEw6H9k+NUfh48IZC8mfgSnc6tgCdNkfaDHLoMJ
        PnXItp4oIb4e3TMQfL7gAnmtQnSs75WQ3h8KzHp1sECyB1gA+tCK3jed/1eWRBkG18AW2dd9sACKbeA6
        Qch2P4R5JzhtX7S/at9xfDsE4jry0b9D4Y7fTyWodHX9AdzINQeUEBeyAAAAAElFTkSuQmCC
</value>
  </data>
</root>